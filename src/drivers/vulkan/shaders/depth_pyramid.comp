#version 450

layout (set = 0, binding = 0) uniform sampler2D i_image;

layout (set = 0, binding = 1, r32f) writeonly uniform image2D o_image;

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(push_constant) uniform block
{
	uvec2 imageSize;
};

void main() {
	uvec2 pos = gl_GlobalInvocationID.xy;

	if (pos.x < imageSize.x && pos.y < imageSize.y) {
		// Sampler is set up to do min reduction, so this computes the minimum depth of a 2x2 texel quad
		float depth = texture(i_image, (vec2(pos) + vec2(0.5)) / imageSize).x;

		imageStore(o_image, ivec2(pos), vec4(depth));
	}
}
